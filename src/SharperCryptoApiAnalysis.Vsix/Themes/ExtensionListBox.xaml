<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:SharperCryptoApiAnalysis.Vsix.Controls"
    xmlns:extension="clr-namespace:SharperCryptoApiAnalysis.Vsix.ViewModels.Extension"
    xmlns:platformUi="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:styleSelectors="clr-namespace:SharperCryptoApiAnalysis.Vsix.Ui.StyleSelectors">

    <DataTemplate DataType="{x:Type extension:ExtensionItemListViewModel}">
        <controls:ExtensionItemControl DataContext="{Binding}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type extension:LoadingStatusIndicator}">
        <Grid Margin="0,8">
            <TextBlock
                x:Name="NoItemsFoundTextBlock"
                HorizontalAlignment="Center"
                FontStyle="Italic"
                Text="No Items Found"
                Visibility="Collapsed" />
            <Grid
                x:Name="SpinnerGrid"
                Height="22"
                HorizontalAlignment="Center"
                Visibility="Collapsed">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <controls:Spinner
                    Grid.Column="0"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Visibility="{Binding Visibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}, AncestorLevel=1}}" />
                <TextBlock
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Text="{Binding LoadingMessage}" />
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Status}" Value="Loading">
                <Setter TargetName="SpinnerGrid" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Status}" Value="NoItemsFound">
                <Setter TargetName="NoItemsFoundTextBlock" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="ListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
        <Border
            x:Name="Border"
            Padding="0"
            Background="{TemplateBinding Background}"
            BorderThickness="0"
            SnapsToDevicePixels="True">
            <ContentPresenter
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static platformUi:EnvironmentColors.ToolboxContentMouseOverBrushKey}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static platformUi:EnvironmentColors.ToolboxContentMouseOverTextBrushKey}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static platformUi:TreeViewColors.SelectedItemInactiveBrushKey}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static platformUi:TreeViewColors.SelectedItemInactiveTextBrushKey}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static platformUi:TreeViewColors.SelectedItemActiveBrushKey}}" />
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static platformUi:TreeViewColors.SelectedItemActiveTextBrushKey}}" />
            </MultiTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource ListBoxItemTemplate}" />
    </Style>


    <ControlTemplate x:Key="LoadingIndicatorListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
        <Border
            Padding="0"
            Background="{DynamicResource {x:Static shell:VsBrushes.BrandedUIBackgroundKey}}"
            BorderThickness="0"
            SnapsToDevicePixels="True">
            <ContentPresenter
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
    </ControlTemplate>

    <Style
        x:Key="LoadingStatusIndicatorStyle"
        BasedOn="{StaticResource ListBoxItemStyle}"
        TargetType="{x:Type ListBoxItem}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource LoadingIndicatorListBoxItemTemplate}" />
    </Style>


    <styleSelectors:ExtensionItemStyleSelector
        x:Key="ExtensionItemStyleSelector"
        ItemStyle="{StaticResource ListBoxItemStyle}"
        StatusIndicatorStyle="{StaticResource LoadingStatusIndicatorStyle}" />

    <Style TargetType="{x:Type controls:ExtensionListBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="VirtualizingPanel.CacheLength" Value="1,2" />
        <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Page" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource ExtensionItemStyleSelector}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        x:Name="Border"
                        Padding="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>