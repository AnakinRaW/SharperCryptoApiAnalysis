<!--
    // Copyright (c) .NET Foundation. All rights reserved.
    // Licensed under the Apache License, Version 2.0. See Credits.txt in the project root for license information.
    // Original file: NuGet.Client/src/NuGet.Clients/NuGet.PackageManagement.UI/Xamls/DetailControl.xaml
    // Modifications made: simplified and removed unnecessary controls
-->
<UserControl
    x:Class="SharperCryptoApiAnalysis.Vsix.Controls.DetailControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:SharperCryptoApiAnalysis.Shell.Interop.Converters;assembly=SharperCryptoApiAnalysis.Shell.Interop"
    xmlns:converters1="clr-namespace:SharperCryptoApiAnalysis.Vsix.Ui.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:nuget="clr-namespace:SharperCryptoApiAnalysis.Vsix.Commands"
    xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
    d:DesignHeight="600"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <FrameworkElement.Resources>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <converters:InverseNullToVisibilityConverter x:Key="InverseNullToVisibilityConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters1:InverseBaseExtensionToBooleanConverter x:Key="InverseBaseExtensionToBooleanConverter" />

        <Style
            x:Key="SelectableTextBlockStyle"
            BasedOn="{StaticResource {x:Type TextBox}}"
            TargetType="{x:Type TextBox}">
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static shell:VsBrushes.BrandedUITextKey}}" />
            <Setter Property="Padding" Value="-2,0,-2,0" />
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="UIElement.IsMouseOver" Value="false" />
                        <Condition Property="UIElement.IsFocused" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TextBox}">
                                <TextBlock
                                    Padding="0"
                                    Background="{TemplateBinding Background}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="{DynamicResource {x:Static shell:VsBrushes.BrandedUITextKey}}"
                                    Text="{TemplateBinding Text}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="{TemplateBinding TextWrapping}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

    </FrameworkElement.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
        <Grid Margin="24,0,7,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid
                MinHeight="32"
                Margin="0,8"
                HorizontalAlignment="Left"
                Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    FontSize="16"
                    Text="{Binding SelectedItem.ExtensionMetadata.Name}" />
            </Grid>

            <Grid Margin="0,10,0,8" Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="10" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Text="Installed:"
                    Visibility="{Binding SelectedItem.InstalledVersion, Converter={StaticResource NullToVisibilityConverter}, Mode=OneWay}" />

                <Border
                    Grid.Row="0"
                    Grid.Column="2"
                    BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                    BorderThickness="1"
                    Visibility="{Binding SelectedItem.InstalledVersion, Converter={StaticResource NullToVisibilityConverter}, Mode=OneWay}">
                    <TextBlock
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding SelectedItem.InstalledVersion}" />
                </Border>
                <Button
                    Grid.Row="0"
                    Grid.Column="4"
                    MinWidth="100"
                    MinHeight="24"
                    HorizontalAlignment="Left"
                    Command="{x:Static nuget:ExtensionCommands.UninstallExtensionCommand}"
                    CommandParameter="{Binding SelectedItem}"
                    Content="Uninstall"
                    IsEnabled="{Binding SelectedItem.ExtensionMetadata, Converter={StaticResource InverseBaseExtensionToBooleanConverter}}"
                    Visibility="{Binding SelectedItem.InstalledVersion, Converter={StaticResource NullToVisibilityConverter}}" />
                <TextBlock
                    Grid.Row="2"
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Text="Version:" />

                <Border
                    Grid.Row="2"
                    Grid.Column="2"
                    BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                    BorderThickness="1">
                    <TextBlock
                        Margin="3,0,0,0"
                        VerticalAlignment="Center"
                        Text="{Binding SelectedItem.LatestVersion}" />
                </Border>

                <Button
                    Grid.Row="2"
                    Grid.Column="4"
                    MinWidth="100"
                    MinHeight="24"
                    HorizontalAlignment="Left"
                    Command="{x:Static nuget:ExtensionCommands.InstallExtensionCommand}"
                    CommandParameter="{Binding SelectedItem}"
                    Content="Install"
                    Visibility="{Binding SelectedItem.InstalledVersion, Converter={StaticResource InverseNullToVisibilityConverter}, Mode=OneWay}" />
                <Button
                    Grid.Row="2"
                    Grid.Column="4"
                    MinWidth="100"
                    MinHeight="24"
                    HorizontalAlignment="Left"
                    Command="{x:Static nuget:ExtensionCommands.InstallExtensionCommand}"
                    CommandParameter="{Binding SelectedItem}"
                    Content="Update"
                    IsEnabled="{Binding SelectedItem.LatestVersionInstalled, Converter={StaticResource InverseBooleanConverter}}"
                    Visibility="{Binding SelectedItem.InstalledVersion, Converter={StaticResource NullToVisibilityConverter}}" />
            </Grid>


            <GridSplitter
                Grid.Row="2"
                Height="4"
                Margin="-24,0,-7,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Background="LightSlateGray"
                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                BorderThickness="0,1" />

            <Border
                Grid.Row="3"
                Margin="0,11,0,16"
                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                BorderThickness="0,1,0,0" />

            <Grid Grid.Row="4" Margin="0,12,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock
                    Grid.Row="0"
                    FontWeight="Bold"
                    Text="Description:" />
                <TextBox
                    Grid.Row="1"
                    Margin="0,8,0,0"
                    Style="{StaticResource SelectableTextBlockStyle}"
                    Text="{Binding SelectedItem.ExtensionMetadata.Description}"
                    TextWrapping="Wrap" />
            </Grid>

        </Grid>
    </ScrollViewer>
</UserControl>
